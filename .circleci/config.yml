version: 2.1
executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:10.16.0
    environment:
      KUBECTL_RELEASE_DATE: "2019-06-11"
      KUBECTL_VERSION: "1.13.7"

commands:
  restore_npm:
    steps:
      - restore_cache:
          name: Restore npm dependencies
          key: npm-{{ checksum "package-lock.json" }}-{{ .Environment.CACHE_VERSION_NPM }}
  save_npm:
    steps:
      - save_cache:
          name: Cache npm dependencies
          key: npm-{{ checksum "package-lock.json" }}-{{ .Environment.CACHE_VERSION_NPM }}
          paths:
            - ~/workspace/node_modules
  assume_role:
    steps:
      - run:
          name: Assume role
          command: |
            sudo apt-get install awscli
            unset AWS_SESSION_TOKEN
            echo ${ASSUME_ROLE_ARN}
            temp_role=$(aws sts assume-role --role-arn ${ASSUME_ROLE_ARN} --role-session-name $CIRCLE_PROJECT_REPONAME)
            echo "export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)" >> $BASH_ENV
  install:
    steps:
      - run:
          name: Install dependencies
          command: npm ci
  build:
    steps:
      - run:
          name: Run build
          command: npm run build
  test:
    steps:
      - run:
          name: Run test
          command: npm run test
  diff:
    steps:
      - run:
          name: Run cdk diff
          command: |
            if [ -n "$CIRCLE_PULL_REQUEST" ]; then
              pr_number=${CIRCLE_PULL_REQUEST##*/}
              block='```'
              diff=$(echo -e "npm run ci_diff\n${block}\n$(npm run --silent ci_diff)\n${block}")
              data=$(jq -n --arg body "$diff" '{ body: $body }') # escape
              curl -X POST -H 'Content-Type:application/json' \
                -H 'Accept: application/vnd.github.v3+json' \
                -H "Authorization: token ${GITHUB_TOKEN}" \
                -d "$data" \
                "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/issues/${pr_number}/comments"
            fi
  deploy:
    steps:
      - run:
          name: Run cdk deploy
          command: npm run ci_deploy
  update_kubeconfig:
    steps:
      - run:
          name: Update KubeConfig
          command: |
            sudo apt-get install awscli
            stack_detail=$(aws cloudformation describe-stacks --stack-name EksStack)
            cluster_name=$(echo ${stack_detail} | jq -r '.Stacks[].Outputs | map(select(.OutputKey == "EksClusterName" ).OutputValue)[]')
            aws eks update-kubeconfig --name ${cluster_name}
  aws_auth:
    steps:
      - run:
          name: Enable worker nodes to join cluster
          command: |
            curl -so /usr/local/bin/kubectl https://amazon-eks.s3-us-west-2.amazonaws.com/${KUBECTL_VERSION}/${KUBECTL_RELEASE_DATE}/bin/linux/amd64/kubectl
            chmod +x /usr/local/bin/kubectl
            stack_detail=$(aws cloudformation describe-stacks --stack-name EksStack)
            instance_role=$(echo ${stack_detail} | jq -r '.Stacks[].Outputs | map(select(.OutputKey == "EksWorkerNodesInstanceRoleARN" ).OutputValue)[]')
            role="    - username: system:node:{{EC2PrivateDNSName}}\n      rolearn: ${instance_role}\n      groups:\n        - system:bootstrappers\n        - system:nodes"
            cat templates/manifests/aws-auth-cm.yaml |  awk "/mapRoles: \|/{print;print \"${role}\";next}1" | kubectl apply -f -

jobs:
  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - install
      - save_npm
      - build
      - test
  diff:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - install
      - assume_role
      - diff
  deploy:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - install
      - assume_role
      - deploy
  k8s_setup:
    executor:
      name: default
    steps:
      - checkout
      - assume_role
      - update_kubeconfig
      - aws_auth

workflows:
  test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: master
      - diff:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: master
  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /.*/
            branches:
              only: master
      - k8s_setup:
          requires:
            - deploy
          filters:
            tags:
              only: /.*/
            branches:
              only: master
