// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`eks default 1`] = `
Object {
  "Outputs": Object {
    "EksClusterName": Object {
      "Value": Object {
        "Ref": "EksBC5472D2",
      },
    },
    "EksConfigCommandDB96978F": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "EksBC5472D2",
            },
          ],
        ],
      },
    },
    "EksDefaultCapacityInstanceRoleARN66211973": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "EksDefaultCapacityInstanceRole2307F75A",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "EksKubernetesResourceHandlerCodeArtifactHash3B19700E": Object {
      "Description": "Artifact hash for asset \\"TestEksStack/Eks/KubernetesResourceHandler/Code\\"",
      "Type": "String",
    },
    "EksKubernetesResourceHandlerCodeS3BucketAE913A60": Object {
      "Description": "S3 bucket for asset \\"TestEksStack/Eks/KubernetesResourceHandler/Code\\"",
      "Type": "String",
    },
    "EksKubernetesResourceHandlerCodeS3VersionKeyDA3C33E2": Object {
      "Description": "S3 key for asset version \\"TestEksStack/Eks/KubernetesResourceHandler/Code\\"",
      "Type": "String",
    },
    "EksResourceHandlerCodeArtifactHash62300F43": Object {
      "Description": "Artifact hash for asset \\"TestEksStack/Eks/Resource/ResourceHandler/Code\\"",
      "Type": "String",
    },
    "EksResourceHandlerCodeS3BucketA1E6193F": Object {
      "Description": "S3 bucket for asset \\"TestEksStack/Eks/Resource/ResourceHandler/Code\\"",
      "Type": "String",
    },
    "EksResourceHandlerCodeS3VersionKey35C2EFAD": Object {
      "Description": "S3 key for asset version \\"TestEksStack/Eks/Resource/ResourceHandler/Code\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AlbIngressPolicy9773036A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "acm:DescribeCertificate",
                "acm:ListCertificates",
                "acm:GetCertificate",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:AuthorizeSecurityGroupIngress",
                "ec2:CreateSecurityGroup",
                "ec2:CreateTags",
                "ec2:DeleteTags",
                "ec2:DeleteSecurityGroup",
                "ec2:DescribeAccountAttributes",
                "ec2:DescribeAddresses",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeTags",
                "ec2:DescribeVpcs",
                "ec2:ModifyInstanceAttribute",
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:RevokeSecurityGroupIngress",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "elasticloadbalancing:AddListenerCertificates",
                "elasticloadbalancing:AddTags",
                "elasticloadbalancing:CreateListener",
                "elasticloadbalancing:CreateLoadBalancer",
                "elasticloadbalancing:CreateRule",
                "elasticloadbalancing:CreateTargetGroup",
                "elasticloadbalancing:DeleteListener",
                "elasticloadbalancing:DeleteLoadBalancer",
                "elasticloadbalancing:DeleteRule",
                "elasticloadbalancing:DeleteTargetGroup",
                "elasticloadbalancing:DeregisterTargets",
                "elasticloadbalancing:DescribeListenerCertificates",
                "elasticloadbalancing:DescribeListeners",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeLoadBalancerAttributes",
                "elasticloadbalancing:DescribeRules",
                "elasticloadbalancing:DescribeSSLPolicies",
                "elasticloadbalancing:DescribeTags",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetGroupAttributes",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:ModifyListener",
                "elasticloadbalancing:ModifyLoadBalancerAttributes",
                "elasticloadbalancing:ModifyRule",
                "elasticloadbalancing:ModifyTargetGroup",
                "elasticloadbalancing:ModifyTargetGroupAttributes",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:RemoveListenerCertificates",
                "elasticloadbalancing:RemoveTags",
                "elasticloadbalancing:SetIpAddressType",
                "elasticloadbalancing:SetSecurityGroups",
                "elasticloadbalancing:SetSubnets",
                "elasticloadbalancing:SetWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:CreateServiceLinkedRole",
                "iam:GetServerCertificate",
                "iam:ListServerCertificates",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "waf-regional:GetWebACLForResource",
                "waf-regional:GetWebACL",
                "waf-regional:AssociateWebACL",
                "waf-regional:DisassociateWebACL",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "tag:GetResources",
                "tag:TagResources",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "waf:GetWebACL",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "AlbIngressPolicy9773036A",
        "Roles": Array [
          Object {
            "Ref": "EksDefaultCapacityInstanceRole2307F75A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "AwsAuthmanifest00905E16": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\"},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "EksDefaultCapacityInstanceRole2307F75A",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"arn:aws:iam::111111111111:role/cm-dai.kurosawa\\\\\\",\\\\\\"username\\\\\\":\\\\\\"dai.kurosawa\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"arn:aws:iam::111111111111:role/cm-kato.ryo\\\\\\",\\\\\\"username\\\\\\":\\\\\\"kato.ryo\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"arn:aws:iam::111111111111:role/cm-koji.hamada\\\\\\",\\\\\\"username\\\\\\":\\\\\\"koji.hamada\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"arn:aws:iam::111111111111:role/cm-jogan.naoki\\\\\\",\\\\\\"username\\\\\\":\\\\\\"jogan.naoki\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "EksKubernetesResourceHandlerC6DECF98",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "EksBC5472D2": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Config": Object {
          "resourcesVpcConfig": Object {
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "EksControlPlaneSecurityGroupDC02C823",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPublicSubnet1Subnet5C2D37C4FFA2B456",
              },
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPublicSubnet2Subnet691E08A351552740",
              },
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPublicSubnet3SubnetBE12F0B65CC33245",
              },
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
              },
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
              },
              Object {
                "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet3SubnetF258B56EC7CF32DD",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "EksClusterRole457AF3D0",
              "Arn",
            ],
          },
          "version": "1.13",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "EksResourceHandler52D8126A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "EksClusterRole457AF3D0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSServicePolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EksControlPlaneSecurityGroupDC02C823": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "GivenStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EksControlPlaneSecurityGroupfromTestEksStackEksDefaultCapacityInstanceSecurityGroup0E5504C844343B3AE5C": Object {
      "Properties": Object {
        "Description": "from TestEksStackEksDefaultCapacityInstanceSecurityGroup0E5504C8:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "EksControlPlaneSecurityGroupDC02C823",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "EksDefaultCapacityInstanceSecurityGroup0B08A329",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EksDefaultCapacityASGDF4BB67B": Object {
      "Properties": Object {
        "DesiredCapacity": "3",
        "LaunchConfigurationName": Object {
          "Ref": "EksDefaultCapacityLaunchConfigD448D3B6",
        },
        "MaxSize": "3",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "TestEksStack/Eks/DefaultCapacity",
          },
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "EksBC5472D2",
                  },
                ],
              ],
            },
            "PropagateAtLaunch": true,
            "Value": "owned",
          },
        ],
        "VPCZoneIdentifier": Array [
          Object {
            "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet1Subnet536B997AFD4CC940",
          },
          Object {
            "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet2Subnet3788AAA1380949A3",
          },
          Object {
            "Fn::ImportValue": "GivenStack:ExportsOutputRefVpcPrivateSubnet3SubnetF258B56EC7CF32DD",
          },
        ],
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": Object {
        "AutoScalingRollingUpdate": Object {
          "PauseTime": "PT0S",
          "SuspendProcesses": Array [
            "HealthCheck",
            "ReplaceUnhealthy",
            "AZRebalance",
            "AlarmNotification",
            "ScheduledActions",
          ],
          "WaitOnResourceSignals": false,
        },
        "AutoScalingScheduledAction": Object {
          "IgnoreUnmodifiedGroupSizeProperties": true,
        },
      },
    },
    "EksDefaultCapacityInstanceProfileFD992D93": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "EksDefaultCapacityInstanceRole2307F75A",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "EksDefaultCapacityInstanceRole2307F75A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonEC2RoleforSSM",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ElasticLoadBalancingFullAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AutoScalingFullAccess",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestEksStack/Eks/DefaultCapacity",
          },
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "EksBC5472D2",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "EksDefaultCapacityInstanceSecurityGroup0B08A329": Object {
      "Properties": Object {
        "GroupDescription": "TestEksStack/Eks/DefaultCapacity/InstanceSecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "TestEksStack/Eks/DefaultCapacity",
          },
          Object {
            "Key": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "kubernetes.io/cluster/",
                  Object {
                    "Ref": "EksBC5472D2",
                  },
                ],
              ],
            },
            "Value": "owned",
          },
        ],
        "VpcId": Object {
          "Fn::ImportValue": "GivenStack:ExportsOutputRefVpc8378EB38272D6E3A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "EksDefaultCapacityInstanceSecurityGroupfromTestEksStackEksControlPlaneSecurityGroup4EEBD22B102565535C94BE664": Object {
      "Properties": Object {
        "Description": "from TestEksStackEksControlPlaneSecurityGroup4EEBD22B:1025-65535",
        "FromPort": 1025,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "EksDefaultCapacityInstanceSecurityGroup0B08A329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "EksControlPlaneSecurityGroupDC02C823",
            "GroupId",
          ],
        },
        "ToPort": 65535,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EksDefaultCapacityInstanceSecurityGroupfromTestEksStackEksControlPlaneSecurityGroup4EEBD22B44319E3E613": Object {
      "Properties": Object {
        "Description": "from TestEksStackEksControlPlaneSecurityGroup4EEBD22B:443",
        "FromPort": 443,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "EksDefaultCapacityInstanceSecurityGroup0B08A329",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "EksControlPlaneSecurityGroupDC02C823",
            "GroupId",
          ],
        },
        "ToPort": 443,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EksDefaultCapacityInstanceSecurityGroupfromTestEksStackEksDefaultCapacityInstanceSecurityGroup0E5504C8ALLTRAFFIC32304A16": Object {
      "Properties": Object {
        "Description": "from TestEksStackEksDefaultCapacityInstanceSecurityGroup0E5504C8:ALL TRAFFIC",
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "EksDefaultCapacityInstanceSecurityGroup0B08A329",
            "GroupId",
          ],
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "EksDefaultCapacityInstanceSecurityGroup0B08A329",
            "GroupId",
          ],
        },
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "EksDefaultCapacityLaunchConfigD448D3B6": Object {
      "DependsOn": Array [
        "EksDefaultCapacityInstanceRole2307F75A",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "EksDefaultCapacityInstanceProfileFD992D93",
        },
        "ImageId": "ami-0a67c71d2ab43d36f",
        "InstanceType": "m5.large",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "EksDefaultCapacityInstanceSecurityGroup0B08A329",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": Object {
            "Fn::Join": Array [
              "",
              Array [
                "#!/bin/bash
set -o xtrace
/etc/eks/bootstrap.sh ",
                Object {
                  "Ref": "EksBC5472D2",
                },
                " --use-max-pods 29
cd /tmp
yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
systemctl start amazon-ssm-agent",
              ],
            ],
          },
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "EksKubernetesResourceHandlerC6DECF98": Object {
      "DependsOn": Array [
        "EksResourceHandlerServiceRoleDefaultPolicy1DD30BCA",
        "EksResourceHandlerServiceRoleFCA67B0F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "EksKubernetesResourceHandlerCodeS3BucketAE913A60",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "EksKubernetesResourceHandlerCodeS3VersionKeyDA3C33E2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "EksKubernetesResourceHandlerCodeS3VersionKeyDA3C33E2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "CLUSTER_NAME": Object {
              "Ref": "EksBC5472D2",
            },
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Fn::GetAtt": Array [
              "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA",
              "Outputs.LayerVersionArn",
            ],
          },
        ],
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "EksResourceHandlerServiceRoleFCA67B0F",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EksResourceHandler52D8126A": Object {
      "DependsOn": Array [
        "EksResourceHandlerServiceRoleDefaultPolicy1DD30BCA",
        "EksResourceHandlerServiceRoleFCA67B0F",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "EksResourceHandlerCodeS3BucketA1E6193F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "EksResourceHandlerCodeS3VersionKey35C2EFAD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "EksResourceHandlerCodeS3VersionKey35C2EFAD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Fn::GetAtt": Array [
              "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA",
              "Outputs.LayerVersionArn",
            ],
          },
        ],
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "EksResourceHandlerServiceRoleFCA67B0F",
            "Arn",
          ],
        },
        "Runtime": "python3.7",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "EksResourceHandlerServiceRoleDefaultPolicy1DD30BCA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DeleteCluster",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "EksClusterRole457AF3D0",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "EksResourceHandlerServiceRoleDefaultPolicy1DD30BCA",
        "Roles": Array [
          Object {
            "Ref": "EksResourceHandlerServiceRoleFCA67B0F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "EksResourceHandlerServiceRoleFCA67B0F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "kubectllayer8C2542BCBF2B4DFEB765E181FD30A9A0617C4ADA": Object {
      "Properties": Object {
        "Location": Object {
          "ApplicationId": "arn:aws:serverlessrepo:us-east-1:903779448426:applications/lambda-layer-kubectl",
          "SemanticVersion": "1.13.7",
        },
        "Parameters": Object {
          "LayerName": "kubectl-bbc720e9b4a401268f8909c0b9581b29",
        },
      },
      "Type": "AWS::Serverless::Application",
    },
  },
  "Transform": "AWS::Serverless-2016-10-31",
}
`;
